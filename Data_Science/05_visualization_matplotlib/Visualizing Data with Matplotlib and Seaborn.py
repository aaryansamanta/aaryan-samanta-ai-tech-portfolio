"""

**Author**: Aaryan Samanta

**Organization**: Legend College Preparatory

**Date**: 2025

**Title**:  Visualizing Data with Matplotlib and Seaborn

**Version**: 1.0

**Type**: Source Code

**Adaptation details**: Based on classroom exercises

**Description**: In this assignment, students will practice creating bar plots, line charts, and scatterplots using Matplotlib and Seaborn



---


Developed as part of the AI Internship at Legend College Preparatory.
Please note that it is a violation of school policy to copy and use this code without proper attribution and credit acknowledgement.
Failing to do so can constitute plagiarism, even with small code snippets.
"""

# -*- coding: utf-8 -*-
"""data_visualization_assignment

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13aQZ-uvvspvhb3gGj8VLnT3NxLRVYgHb
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from io import StringIO



weather_data = """Date,City,Temperature,Precipitation,Humidity
2023-01-01,New York,32,0.1,60
2023-01-02,New York,30,0.2,65
2023-01-03,New York,28,0.0,55
2023-01-01,Los Angeles,60,0.0,40
2023-01-02,Los Angeles,62,0.0,38
2023-01-03,Los Angeles,65,0.0,35
2023-01-01,Chicago,25,0.1,75
2023-01-02,Chicago,20,0.3,80
2023-01-03,Chicago,18,0.2,85
2023-01-04,Chicago,22,0.0,70
2023-01-04,New York,35,0.0,55
2023-01-04,Los Angeles,70,0.0,32
"""

data = pd.read_csv(StringIO(weather_data))
#using StringIO instead because no csv file
print(data.head())

avg_temp = data.groupby("City")["Temperature"].mean()

plt.figure(figsize=(8, 6))
plt.bar(avg_temp.index, avg_temp.values, color=["skyblue", "salmon", "lightgreen"])
plt.title("Average Temperature by City")
plt.xlabel("City")
plt.ylabel("Average Temperature (°F)")
plt.tight_layout()
plt.savefig("bar_plot_average_temperature.png")
plt.show()


plt.figure(figsize=(10, 6))
sns.lineplot(data=data, x="Date", y="Temperature", hue="City", marker="o")
plt.title("Temperature Trend Over Time by City")
plt.xlabel("Date")
plt.ylabel("Temperature (°F)")
plt.legend(title="City")
plt.xticks(rotation=30)
plt.tight_layout()
plt.savefig("line_chart_temperature_trend.png")
plt.show()


plt.figure(figsize=(8, 6))
sns.scatterplot(data=data, x="Temperature", y="Humidity", hue="City", style="City", s=100)
plt.title("Relationship Between Temperature and Humidity")
plt.xlabel("Temperature (°F)")
plt.ylabel("Humidity (%)")
plt.legend(title="City")
plt.tight_layout()
plt.savefig("scatterplot_temp_vs_humidity.png")
plt.show()